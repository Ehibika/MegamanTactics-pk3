
Actor CrystalMan : ClassBase //replaces CrystalMan
{
Player.DisplayName "CrystalMan"
Player.SoundClass "CrystalMan"

Player.Startitem "IsCrystalMan"
Player.Startitem "CrystalMan_ClassSet"

player.startitem "SetupShop"
player.startitem "LoadShopInventory"
player.startitem "RoundSignatureGive"
player.startitem "AbilityAmmo"
+NOSKIN
States
{
Spawn: 
CRYM A 0
CRYM B 1 
CRYM A 1
GoTo Spawn+2
See:
CRYM BCDE 5
GoTo Spawn+1
Missile:
CRYM F 5
CRYM G 4
GoTo Spawn+2
PainFix:
CRYM H 0 
GoTo PainFrames
}
}



Actor IsCrystalMan : Once{}
Const int Cap_CrystalEyeCam = 1;
Const int Cap_PingCrystal = 2;


actor CrystalManStarterSet : CustomInventory
{
states
{
Pickup:
TNT1 A 0 //A_GiveInventory("Zapper",1)
TNT1 A 0 //ACS_NamedExecuteAlways("GiveSignatureCharge",0,Cap_CrystalEyeCam)
TNT1 A 0
Done:
TNT1 A 0
stop
}
}

actor CrystalMan_Melee : CustomInventory
{
states
{
Pickup:
TNT1 A 0 //A_GiveInventory("BasicKnife",1)
TNT1 A 0
Done:
TNT1 A 0
stop
}
}

actor CrystalMan_ClassSet : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("UseAbility1_CrystalMan",1)
TNT1 A 0 A_GiveInventory("Ability1_ChargeFlag",1)
TNT1 A 0 A_GiveInventory("AbilityChargeCap_1",Cap_CrystalEyeCam)

//==
TNT1 A 0 A_GiveInventory("UseAbility2_CrystalMan",1)
TNT1 A 0 A_GiveInventory("Ability2_ChargeFlag",1)
TNT1 A 0 A_GiveInventory("AbilityChargeCap_2",Cap_PingCrystal)
//==
Done:
TNT1 A 0
stop
}
}

//=========|Class Shop|============

actor CrystalMan_ClassShop : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("BuyCrystalMan",1)
TNT1 A 0 A_GiveInventory("BuyPingCrystal",1)
stop
}
}

Const int Cost_CrystalMan = 200;
Const int Cost_PingCrystal = 200;

actor BuyCrystalMan : BuyThing
{
states
{
Use1:
TNT1 A 0 A_JumpIf(CallACS("CashCheck",Cost_CrystalMan),"Use2")
goto NoMoney
CostPay:
TNT1 A 0 ACS_NamedExecuteWithResult("CashPay",Cost_CrystalMan)
goto BuySuccess
//===
Use2:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_1",Cap_CrystalEyeCam,"FullCapacity")
TNT1 A 0 A_GiveInventory("AbilityCharge_1",1)
TNT1 A 0 ACS_NamedExecuteAlways("Write_Inventory",0)

goto CostPay
}
}

actor BuyPingCrystal : BuyThing
{
states
{
Use1:
TNT1 A 0 A_JumpIf(CallACS("CashCheck",Cost_PingCrystal),"Use2")
goto NoMoney
CostPay:
TNT1 A 0 ACS_NamedExecuteWithResult("CashPay",Cost_PingCrystal)
goto BuySuccess
//===
Use2:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_2",Cap_PingCrystal,"FullCapacity")
TNT1 A 0 A_GiveInventory("AbilityCharge_2",1)
TNT1 A 0 ACS_NamedExecuteAlways("Write_Inventory",0)

goto CostPay
}
}
