const int Aim_CamLob = 55;

actor Ability1_CrystalMan : AbilityMasterBase
{
Tag "Camera Drone"
inventory.icon "STKOUTA1"
States
{
Select:
CRYA B 0 ACS_NamedExecuteAlways("WepSpeedMod",0,1.0*FVM)
CRYA BBB 0 A_Raise
CRYA B 1 A_WEAPONREADY(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB)
Loop

Ready:
CRYA B 0 
"####" B 0 A_FireCustomMissile("CrystalEyeCamInstantStarter",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" B 1 A_WeaponReady
goto Ready

AltFire:
"####" B 0 A_FireCustomMissile("CrystalEyeCamInstantStarter2",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
"####" B 1 A_Jumpif(CallACS("MT_ButtonCheck",BT_ATTACK)==1,"AltFire2")
"####" B 1 A_Refire
goto Ready

AltFire2:
"####" F 1 A_FireCustomMissile("CrystalEyeCamInstantStarter2",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
"####" C 0 A_GiveInventory("WeaponCharge",1)
"####" A 0 A_JumpIfInventory("WeaponCharge",5,"AltFire.Start")
/*
This 5 frame hold delay is means to serve as a way to make the need to hold the button to readust the camera
more intuitive by necessitating that you have to hold the button to throw the camera in the first place
rather than tap it.
*/
"####" A 0 A_Jumpif(CallACS("MT_ButtonCheck",BT_ATTACK)==1,"AltFire2")
"####" B 0 A_TakeInventory("WeaponCharge",999)
goto AltFire
AltFire.Start:
"####" B 0 A_TakeInventory("WeaponCharge",999)
"####" B 0 A_TakeInventory("AbilityCharge_1",1)
"####" B 0 //ACS_NamedExecuteWithResult("CSLT_Chatline",CLT_ABILITY,0)
"####" BA 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" C 0 A_GiveInventory("CrystalManUnderTossCamera",1)
goto Cont
Fire:
"####" F 1 A_FireCustomMissile("CrystalEyeCamInstantStarter",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" C 0 A_GiveInventory("WeaponCharge",1)
"####" A 0 A_JumpIfInventory("WeaponCharge",5,"Fire.Start")
"####" A 0 A_Refire("Fire")
"####" B 0 A_TakeInventory("WeaponCharge",999)
goto Ready
Fire.Start:
"####" B 0 A_TakeInventory("WeaponCharge",999)
"####" B 0 A_TakeInventory("AbilityCharge_1",1)
"####" A 0 //ACS_NamedExecuteWithResult("CSLT_Chatline",CLT_ABILITY,0)
"####" BA 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" C 0 A_GiveInventory("CrystalManTossCamera",1)
Cont:
"####" C 0 A_GiveInventory("CrystalManCamFlag",1) //this is about to look horrible
Hold:
"####" A 1 A_RailWait
"####" A 0 A_JumpIfInventory("SignatureTimer",1,"Release.h")
"####" A 0 A_Refire("Hold.h")
"####" A 1 A_Jump(256,"Release.h")
wait
Hold.h:
"####" A 1 A_RailWait
"####" A 0 A_JumpIfInventory("SignatureTimer",1,"Release.i")
"####" A 0 A_Refire("Hold.i")
"####" A 1 A_Jump(256,"Release.i")
wait
Hold.i:
"####" A 1 A_RailWait
"####" A 0 A_JumpIfInventory("SignatureTimer",1,"Release.j")
"####" A 0 A_Refire("Hold.j")
"####" A 1 A_Jump(256,"Release.j")
wait
Hold.j:
"####" A 1 A_RailWait
"####" A 0 A_JumpIfInventory("SignatureTimer",1,"Release")
"####" A 0 A_Refire("HoldTrue")
"####" A 1 A_Jump(256,"Release")
wait
HoldTrue:
"####" A 1 A_RailWait
"####" A 0 A_JumpIfInventory("SignatureTimer",1,"Release")
"####" A 0 A_Refire("HoldTrue")
"####" A 1 A_Jump(256,"Release")
wait
Release.h:
"####" A 0 A_ClearRefire
"####" A 0 A_TakeInventory("CrystalManCamFlag",999)
"####" A 1
Release.i:
"####" A 0 A_ClearRefire
"####" A 0 A_TakeInventory("CrystalManCamFlag",999)
"####" A 1
Release.j:
"####" A 0 A_ClearRefire
"####" A 0 A_TakeInventory("CrystalManCamFlag",999)
"####" A 1
Release:
"####" A 0 A_ClearRefire
"####" A 0 A_TakeInventory("CrystalManCamFlag",999)
End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",999)
"####" A 0 
Goto End
}
}

actor CrystalManTossCamera : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("LightTeamFlag",1,"Fire0")
TNT1 A 0 A_JumpIfInventory("WilyTeamFlag",1,"Fire1")
TNT1 A 0 A_JumpIfInventory("CossackTeamFlag",1,"Fire2")
TNT1 A 0 A_JumpIfInventory("KingTeamFlag",1,"Fire3")
TNT1 A 1 A_JumpIfInventory("IsCrystalMan",1,"Fire")
wait
Fire:
TNT1 A 0 A_FireCustomMissile("CrystalManCamera",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
stop
Fire0:
TNT1 A 0 A_FireCustomMissile("CrystalManCamera0",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
stop
Fire1:
TNT1 A 0 A_FireCustomMissile("CrystalManCamera1",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
stop
Fire2:
TNT1 A 0 A_FireCustomMissile("CrystalManCamera2",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
stop
Fire3:
TNT1 A 0 A_FireCustomMissile("CrystalManCamera3",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
stop
}
}

actor CrystalManUnderTossCamera : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("LightTeamFlag",1,"Fire0")
TNT1 A 0 A_JumpIfInventory("WilyTeamFlag",1,"Fire1")
TNT1 A 0 A_JumpIfInventory("CossackTeamFlag",1,"Fire2")
TNT1 A 0 A_JumpIfInventory("KingTeamFlag",1,"Fire3")
TNT1 A 1 A_JumpIfInventory("IsCrystalMan",1,"Fire")
wait
Fire:
TNT1 A 0 A_FireCustomMissile("CrystalManCameraUnderhand",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
stop
Fire0:
TNT1 A 0 A_FireCustomMissile("CrystalManCameraUnderhand0",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
stop
Fire1:
TNT1 A 0 A_FireCustomMissile("CrystalManCameraUnderhand1",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
stop
Fire2:
TNT1 A 0 A_FireCustomMissile("CrystalManCameraUnderhand2",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
stop
Fire3:
TNT1 A 0 A_FireCustomMissile("CrystalManCameraUnderhand3",0,0,8,-20,0,Aim_CamLob+(Aim_ArcScale*Sin(-pitch)))
stop
}
}

actor UseAbility1_CrystalMan : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("CameraDrone_Ability",1)
fail
}
}

actor CameraDrone_Ability : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_1",1,"Pickup2")
stop

Pickup2:
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop
}
}

	actor CrystalEyeCamAim : GolfBallAim 
        { 
        gravity 1.8
        speed 40
        mass 20
        wallbouncefactor 0.7
        bouncefactor 0.7
        Radius 17
        Height 35
        }


	actor CrystalEyeCamInstantStarter : CrystalEyeCamAim
	{
		+CLIENTSIDEONLY
		translation "198:198=220:220", "192:192=229:229"
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 ACS_NamedExecuteWithResult("Arc_Limit_Start")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("CrystalEyeCamInstantBuffer",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}
	actor CrystalEyeCamInstantBuffer : CrystalEyeCamAim
	{
		+CLIENTSIDEONLY
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("CrystalEyeCamInstant",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}
	//then it just repeats itself until it hits a wall/floor
	actor CrystalEyeCamInstant : CrystalEyeCamAim
	{
		+CLIENTSIDEONLY
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(CallACS("Arc_Limit"),"Nope")
			TNT1 A 0 //A_JumpIfInTargetInventory("BetweenShots",1,"Nope")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Nope")
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",(10*momx)/-20.0,-(10*momy)/-20.0,(10*momz)/-20.0,0,0,0,0,SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION )
			TNT1 A 0 A_SpawnItemEx("CrystalEyeCamInstant",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		Nope:
			TNT1 A 1
			stop
		}
	}
 
	actor CrystalEyeCamInstantStarter2 : CrystalEyeCamInstantStarter
	{Speed 20}

actor CrystalManCamFlag : Inventory
{
inventory.amount 1
inventory.maxamount 1
}

actor CrystalManCamera
{
var int user_setPitch;
var int user_setAngle;

PROJECTILE
-NOGRAVITY
gravity 1.8
speed 40
+DONTBLAST
+DONTREFLECT

+BOUNCEONWALLS
+BOUNCEONCEILINGS
+BOUNCEONFLOORS
+CANBOUNCEWATER
+USEBOUNCESTATE
-ALLOWBOUNCEONACTORS
-BOUNCEONACTORS
wallbouncefactor 0.7
bouncefactor 0.7
BounceSound "weapon/reboundstriker"

Radius 17
Height 35
CameraHeight 24
scale 2.5
mass 20

+RIPPER
damage (0)

+NOTARGETSWITCH
+DONTRIP
-NOBLOCKMAP
+NOBLOOD
+CANTSEEK
+NOTAUTOAIMED
+SHOOTABLE
health 1
States
{
Spawn:
STUT H 0
STUT H 0 A_GiveInventory("CameraStarterPackage",1)
STUT H 0 A_GiveInventory("ProjectileCode",1)
STUT H 0 //ThrustThingZ(0,mass,0,1)
STUT H 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT H 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",1)
STUT H 1 
STUT H 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.a.High")
STUT H 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.a.Low")
STUT H 1 A_JumpIf(true, "SpawnLoop.a.Norm")
wait
SpawnLoop.a.High:
STUT J 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT J 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT J 1 
STUT J 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.b.High")
STUT J 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.b.Low")
STUT J 1 A_JumpIf(true, "SpawnLoop.b.Norm")
wait
SpawnLoop.a.Low:
STUT L 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT L 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT L 1 
STUT L 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.b.High")
STUT L 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.b.Low")
STUT L 1 A_JumpIf(true, "SpawnLoop.b.Norm")
wait
SpawnLoop.a.Norm:
STUT H 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT H 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT H 1 
STUT H 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.b.High")
STUT H 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.b.Low")
STUT H 1 A_JumpIf(true, "SpawnLoop.b.Norm")
wait
SpawnLoop.b.High:
STUT K 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT K 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT K 1 
STUT K 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.c.High")
STUT K 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.c.Low")
STUT K 1 A_JumpIf(true, "SpawnLoop.c.Norm")
wait
SpawnLoop.b.Low:
STUT M 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT M 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT M 1 
STUT M 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.c.High")
STUT M 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.c.Low")
STUT M 1 A_JumpIf(true, "SpawnLoop.c.Norm")
wait
SpawnLoop.b.Norm:
STUT I 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT I 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT I 1 
STUT I 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.c.High")
STUT I 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.c.Low")
STUT I 1 A_JumpIf(true, "SpawnLoop.c.Norm")
wait
SpawnLoop.c.High:
STUT K 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT K 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT K 1 
STUT K 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.d.High")
STUT K 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.d.Low")
STUT K 1 A_JumpIf(true, "SpawnLoop.d.Norm")
wait
SpawnLoop.c.Low:
STUT M 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT M 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT M 1 
STUT M 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.d.High")
STUT M 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.d.Low")
STUT M 1 A_JumpIf(true, "SpawnLoop.d.Norm")
wait
SpawnLoop.c.Norm:
STUT I 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT I 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT I 1 
STUT I 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.d.High")
STUT I 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.d.Low")
STUT I 1 A_JumpIf(true, "SpawnLoop.d.Norm")
wait
SpawnLoop.d.High:
STUT J 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT J 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT J 1 
STUT J 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.a.High")
STUT J 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.a.Low")
STUT J 1 A_JumpIf(true, "SpawnLoop.a.Norm")
wait
SpawnLoop.d.Low:
STUT L 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT L 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT L 1 
STUT L 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.a.High")
STUT L 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.a.Low")
STUT L 1 A_JumpIf(true, "SpawnLoop.a.Norm")
wait
SpawnLoop.d.Norm:
STUT H 0 A_JumpIf(ACS_NamedExecuteWithResult("CSLT_CrystalMan_CheckFlash"),"Flashed")
STUT H 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_CamAngle",0)
STUT H 1 
STUT H 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.a.High")
STUT H 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.a.Low")
STUT H 1 A_JumpIf(true, "SpawnLoop.a.Norm")
wait
Bounce:
"####" "#" 0 A_GiveInventory("CameraStarterPackage",1)
"####" "#" 0 A_GiveInventory("ProjectileDCode",1)
"####" "#" 0 A_Stop
"####" "#" 0 A_ScaleVelocity(0.0)
"####" "#" 0 A_ChangeFlag("NOGRAVITY",true)
"####" "#" 0 A_JumpIf(pitch > 269 && pitch < 345, "SpawnLoop.a.High")
"####" "#" 0 A_JumpIf(pitch > 15 && pitch < 270, "SpawnLoop.a.Low")
"####" "#" 1 A_JumpIf(true, "SpawnLoop.a.Norm")
wait
Flashed:
TNT1 A 0 A_GiveToTarget("CameraProccedRecharge",1)
TNT1 A 0 A_SpawnItemEX("CameraPopHelper",0,0,15)
TNT1 A 0 A_PlaySoundEx("weapon/centaurflash","Weapon")
TNT1 A 1 A_SpawnItemEx("CameraPopFX",0,0,15,0,0,0,0,1)
stop
Death:
TNT1 A 0 A_GiveInventory("CameraStarterPackage",1)
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_PlaySoundEx("misc/devilpain","Weapon")
TNT1 A 1 A_SpawnItemEx("CameraDeathPopFX",0,0,0,0,0,0,0,1)
stop
}
}
actor CrystalManCameraUnderhand : CrystalManCamera {Speed 20
mass 60}

actor CrystalManCamera0 : CrystalManCamera {designatedTeam 0}
actor CrystalManCameraUnderhand0 : CrystalManCameraUnderhand {designatedTeam 0}
actor CrystalManCamera1 : CrystalManCamera {designatedTeam 1}
actor CrystalManCameraUnderhand1 : CrystalManCameraUnderhand {designatedTeam 1}
actor CrystalManCamera2 : CrystalManCamera {designatedTeam 2}
actor CrystalManCameraUnderhand2 : CrystalManCameraUnderhand {designatedTeam 2}
actor CrystalManCamera3 : CrystalManCamera {designatedTeam 3}
actor CrystalManCameraUnderhand3 : CrystalManCameraUnderhand {designatedTeam 3}

actor CameraPopHelper : BasicHelper
{
radius 15
var int user_Flashed;
renderstyle none
States
{
Spawn:
FST2 ABC 1
TNT1 A 0 A_SetUserVar("user_Flashed",ACS_NamedExecuteWithResult("MT_flashstopperlight", FlashRang,175))
TNT1 A 0 A_JumpIf(user_Flashed>1,"GroupPhoto")
TNT1 A 0 A_JumpIf(user_Flashed>0,"LovelyPhoto")
TNT1 A 1 A_JumpIf(true,"End")
wait
LovelyPhoto:
TNT1 A 5 //ACS_NamedExecuteWithResult("CSLT_Chatline_TargetWrapper",CLT_ABILITY,1)
stop
GroupPhoto:
TNT1 A 5 //ACS_NamedExecuteWithResult("CSLT_Chatline_TargetWrapper",CLT_ABILITY,2)
stop
End:
TNT1 A 5
stop
}
}

actor CameraPopFX : BasicGraphicEffect
{
+FORCEXYBILLBOARD
+BRIGHT
scale 1.5
states
{
Spawn:
FST2 ABCDEF 1 A_FadeOut(0.12)
stop
}
}

actor CameraDeathPopFX : BasicGraphicEffect
{
States
{
Spawn:
MMFX FGHI 2
stop
}
}

actor CameraStarterPackage : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("ProjectileSpawned",1,"Nope")
TNT1 A 0 
TNT1 A 0 Thing_Remove(ACS_ExecuteWithResult(257)+666)
TNT1 A 0 Thing_ChangeTID(0,ACS_ExecuteWithResult(257)+666)
TNT1 A 0 ACS_NamedExecuteWithResult("CSLT_CrystalMan_Camera")
stop
Nope:
TNT1 A 0
stop
}
}

actor CameraSignatureRecharger : SignatureRecharger{Args 15,0}

actor CameraProccedRecharge : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_1",1,"Nope")
TNT1 A 0 A_JumpIfInventory("SignatureRecharging",1,"Nope")
TNT1 A 0 A_SpawnItemEX("CameraSignatureRecharger")
stop
Nope:
TNT1 A 0
stop
}
}


//=====


