actor ClassPainPickup : CustomInventory
{
States
{
Pickup:
TNT1 A 0 
stop
}
}


actor ClassDeathPickup : CustomInventory
{
States
{
Pickup:
TNT1 A 0 SetPlayerProperty(0, 0, 4)
TNT1 A 0 A_TakeInventory("WeaponCharge",999)
TNT1 A 0 A_TakeInventory("ConcreteTime", 999)
TNT1 A 0 A_NoBlocking
TNT1 A 0 A_GiveInventory("isDead",1)
TNT1 A 0 A_GiveInventory("IsDead",1)
TNT1 A 0 A_Stop
TNT1 A 0 A_GiveToTarget("KilledMeStock",1)
TNT1 A 0 A_GiveToTarget("KilledMe",1)
TNT1 A 0  A_GiveInventory("CritCheck")

TNT1 A 0 A_GiveInventory("DeathFlagPack",1)
TNT1 A 0 //A_GiveInventory("3PCam_Off",1)
TNT1 A 0 //A_GiveInventory("PlayerVisionHide_Off",1)
TNT1 A 0 A_GiveToTarget("SignatureKillCounter",1)
stop
}
}

actor PainPower : Powerup
{
powerup.duration 3
}

actor GravityHoldPainPower : PainPower {}
actor WilyIcePainPower : PainPower {}

actor TypeDeathFlag : Inventory
{
inventory.amount 1
inventory.maxamount 1
}

actor ExplodeDeathFlag : TypeDeathFlag {}
actor FallingDeathFlag : TypeDeathFlag {}
actor RisingDeathFlag : TypeDeathFlag {}
actor IceDeathFlag : TypeDeathFlag {}

actor RiseMyMegamanFlag : Inventory
{
inventory.amount 1
inventory.maxamount 35
}


actor SelfTotallyFrozen : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_GiveInventory("SelfTotallyFrozenFlag",1)
TNT1 A 0 SetPlayerProperty(0,1,4)
stop
}
}

actor SelfTotallyFrozenFlag : Inventory
{
inventory.amount 1
inventory.maxamount 1
}


actor Unfreeze : CustomInventory
{
States
{
Pickup1:
TNT1 A 0 A_JumpIfInventory("SelfTotallyFrozenFlag",1,"PickupNo")
//TNT1 A 0 A_JumpIfInventory("TimeStoppedTFFlag",1,"PickupNo")
//TNT1 A 0 A_JumpIfInventory("WilyIceTFFlag",1,"PickupNo")
//TNT1 A 0 A_JumpIfInventory("SelfStoppedTFFlag",1,"PickupNo")
//TNT1 A 0 A_JumpIfInventory("TimeStoppedCounter",1,"PickupNo")
//TNT1 A 0 A_TakeInventory("TotallyFrozenLook",1)
TNT1 A 0 SetPlayerProperty(0,0,4)
stop
PickupNo:
TNT1 A 0
stop
}
}

actor SelfTotallyUnfrozen : Unfreeze
{
States
{
Pickup:
TNT1 A 0 A_TakeInventory("SelfTotallyFrozenFlag",1)
goto Pickup1
}
}

/*
//[+]=========================[+]
//--------|Blind|------------
//[+]=========================[+]

actor BlindStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("BlindMark",1,"Sustain")
//==
TNT1 A 0 A_GiveInventory("BlindMark",1)
PLAY H 0 ACS_NamedExecuteAlways("MT_Blinder",0)
TNT1 A 0 A_SpawnItemEx("STDBlindWatcher")
TNT1 A 0 A_SpawnItemEx("BlinderdFX")
TNT1 A 0 //A_Playsoundex("support/Negative","Soundslot8")
stop

Sustain:
TNT1 A 0 A_GiveInventory("BlindMark",1)
stop

Nope:
TNT1 A 0
stop
}
}

actor BlindMark : Powerup
{
inventory.amount 1
powerup.duration -5
}


actor STDBlindWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
Renderstyle none
States
{
Spawn:
TNT1 A 0
TNT1 A 1 
TNT1 A 0 //A_SpawnItemEx("TimeStopGFX", random(8, 64), 0, random(0, 64), 0, 0, 0, random(0, 359))
goto Spawn.Check1

Spawn.Check1:
TNT1 A 0 A_JumpIfInTargetInventory("BlindMark", 1, "Spawn")
goto Death

Death:
TNT1 A 0 A_TakefromTarget("BlindMark",999)
stop
}
}

actor BlinderdFX : BasicClientside
{
scale 2.5
Translation "192:192=104:104", "198:198=110:110", "195:195=130:130"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("BlinderFXWarper",0)
Spawn2:
BNDR AAAAAAABBBBBBB 1 A_Warp(AAPTR_TARGET,0,0,48,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
loop
Death:
BNDR AZAZAZAZBZBZBZ 1 A_Warp(AAPTR_TARGET,0,0,48,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
stop
}
}
*/