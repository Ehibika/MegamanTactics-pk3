//[+]========================================================================[+]
//------------------------|Status Effect Actors|--------------------------------
//[+]========================================================================[+]


//[+]=========================[+]
//----------|Poison|-------------
//[+]=========================[+]
actor PoisonStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("PoisonMark",1,"Sustain")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"Nope")
TNT1 A 0 A_Jumpifinventory("Pro_ToxicResistance",1,"Nope")
//==
TNT1 A 0 A_GiveInventory("PoisonMark",1)
TNT1 A 0 A_GiveInventory("PoisonFade",1)
TNT1 A 0 A_SpawnItemEX("PoisonWatcher")
TNT1 A 0 A_Playsoundex("support/Negative","Soundslot8")
TNT1 A 0 A_Jumpifinventory("PRO_Gutsy",1,"Gutsy")
stop

Sustain:
TNT1 A 0 A_GiveInventory("PoisonMark",1)
stop

Gutsy:
TNT1 A 0 //A_SpawnItemEX("GutsyRageFX")
stop

Nope:
TNT1 A 0
stop
}
}

actor PoisonWatcher //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%o succumed to %k's Burning"
var int user_OwnerTID;
var int user_LoopCount;
var int user_TickDamage;
States
{
Spawn:
TNT1 A 0
// Sow e start by making this actor immediately set it's master to the spawner's target (last person to damage them)
// and then we set them to our tracer pointer.
TNT1 A 0 A_GiveToTarget("PoisonCritAble",1)
TNT1 A 0 A_Setuservar("user_OwnerTID",ACS_ExecuteWithResult(257,0))
//TNT1 A 0 A_Setuservar("user_TickDamage",CallACS("MT_HealthPercent",AAPTR_TARGET,1,8))
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TARGET,AAPTR_MASTER,PTROP_NOSAFEGUARDS)
TNT1 A 0 A_ReArrangePointers(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_TARGET)
Spawn2:

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")
TNT1 A 0 A_GiveToTarget("PoisonedEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")
//TNT1 A 0 A_GiveToTarget("PoisonedEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")
TNT1 A 0 A_GiveToTarget("PoisonedEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")
//TNT1 A 0 A_GiveToTarget("PoisonedEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")
TNT1 A 0 A_GiveToTarget("PoisonedEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempPoisonProof",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("DetoxLevel",100,"Detox")

TNT1 A 0 A_SetuserVar("user_LoopCount", user_LoopCount+1)
TNT1 A 0 A_Jumpif( user_LoopCount <= 7,"Spawn2")
TNT1 A 0 A_SetuserVar("user_LoopCount", 0)

TNT1 A 0 //A_JumpIfInTargetInventory("ProtectorFlag",1,5)

// when we deal tick damage, we set the target to our master (the person responsible for inflicting the dot) and use this script
// to make them deal tick damage to the victim directly.
TNT1 A 0 A_ReArrangePointers(AAPTR_MASTER,AAPTR_DEFAULT,AAPTR_DEFAULT)
TNT1 A 0  //ACS_NamedExecuteAlways("DotDamager", 0,user_TickDamage,user_OwnerTID,1) //DOT Script
TNT1 A 1 // this delay is important, otherwise it becomes a suicide
TNT1 A 0 A_ReArrangePointers(AAPTR_TRACER,AAPTR_DEFAULT,AAPTR_DEFAULT)
//now we set the target back to the spawner to keep the burn effect on them.
//TNT1 A 0 A_GiveToTarget("BurnedDamage",1)
TNT1 A 0 

TNT1 A 1 A_JumpIfInTargetInventory("PoisonMark",1,"Spawn2")
Goto Death
Detox:
TNT1 A 1 A_GiveToTarget("DetoxCureEffect",1)
Death:
DeathTake:
TNT1 A 0
TNT1 A 0 A_TakefromTarget("PoisonMark",999)
TNT1 A 0 A_TakefromTarget("PoisonCritAble",999)
TNT1 A 0 A_TakefromTarget("DetoxLevel",999)
TNT1 A 1 A_TakefromTarget("PoisonFade",999)
stop
}
}

actor StatusNummer : PowerProtection // for DOTs
{
inventory.amount 1
inventory.maxamount 1
+NOPAIN
Powerup.Duration 1
}


actor PoisonedFX1  //These are decorative.
{
PROJECTILE
+NOINTERACTION
+NOGRAVITY
height 2
Radius 2
damage (0)
reactiontime 1
scale 0.7
RenderStyle "Translucent"
Alpha 0.9
States
{
Spawn:
WAVB GGGGG 2
WAVB H 3 A_Stop
stop
}
}

actor PoisonedEffect : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 //SetPlayerProperty(0,1,4)
TNT1 A 0 A_SpawnItemEx("PoisonedFX1",random(-24,24),random(-32,32),random(30,34),0,0,Random(1,4))
TNT1 A 0 //SetPlayerProperty(0,1,4)
stop
}
}

actor PoisonMark : PowerProtection
{
powerup.duration -15
DamageFactor "Stinger" , 3.0

}

actor PoisonFade : Powerup
{
powerup.duration 0x7FFFFFFD
Powerup.Color Green, 0.15
}

actor PoisonStackDelay : powerup
{powerup.duration 5}


actor DetoxFX1 : FXActor_A
{
Translation "4:4=106:106", "196:196=112:112"
reactiontime 1
scale 1.5
Alpha 0.8
States
{
Spawn:
TNT1 A 0
ICMS ABCDDDEEF 2
stop
}
}

actor DetoxFX2 : DetoxFX1
{
Translation "4:4=137:137", "196:196=105:105"
}

actor DetoxFX3 : DetoxFX1
{
Translation "4:4=96:96", "196:196=203:203"
}

actor DetoxEfectSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
BUST C 0 A_Jumpifinventory("DetoxLevel",66,"Effect3")
BUST C 0 A_Jumpifinventory("DetoxLevel",33,"Effect2")
TNT1 AA 1 A_SpawnItemEx("DetoxFX1",random(-24,24),random(-32,32),random(40,44),0,0,Random(1,3))
stop
Effect2:
TNT1 AA 1 A_SpawnItemEx("DetoxFX2",random(-24,24),random(-32,32),random(40,44),0,0,Random(1,3))
TNT1 A 0
stop
Effect3:
TNT1 AA 1 A_SpawnItemEx("DetoxFX3",random(-24,24),random(-32,32),random(40,44),0,0,Random(1,3))
TNT1 A 0
stop
}
}

actor DetoxCureEffect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
BUST C 0 
TNT1 A 0 A_PlaySoundEx("Support/Heal3", "SoundSlot5",0)
CENF AAAA 0 A_SpawnItemEx("CentaurFlashFX", 0, 0, 28, 256/32, 256/32, random2(256/32), random(0, 359))
CENF AAAA 0 A_SpawnItemEx("DetoxFX3", 0, 0, 28, 256/32, 256/32, random2(256/32), random(0, 359))
TNT1 A 0
stop
}
}
//[+]=========================[+]
//--------|Burning|------------
//[+]=========================[+]
actor BurnStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
//TNT1 A 0 A_Jumpifinventory("Pro_FireResistance",1,"Nope")
TNT1 A 0 A_Jumpifinventory("TempBurnProof",1,"Nope")
TNT1 A 0 A_Jumpifinventory("BurnMark",1,"Sustain")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_GiveInventory("BurnMark",1)
TNT1 A 0 A_GiveInventory("BurnFade",1)
TNT1 A 0 A_SpawnItemEX("BurnWatcher")
TNT1 A 0 A_Playsoundex("support/Negative","Soundslot8")
//TNT1 A 0 A_Jumpifinventory("PRO_Gutsy",1,"Gutsy")
stop

Gutsy:
TNT1 A 0 //A_SpawnItemEX("GutsyRageFX")
stop

Sustain:
TNT1 A 0 A_TakeInventory("BurnMark",1)
TNT1 A 0 A_GiveInventory("BurnMark",1)
stop

Nope:
TNT1 A 0
stop
}
}
actor BurnWatcher //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%o succumed to %k's Burning"
var int user_OwnerTID;
var int user_TickDamage;
var int user_LoopCount;
States
{
Spawn:
TNT1 A 0
// Sow e start by making this actor immediately set it's master to the spawner's target (last person to damage them)
// and then we set them to our tracer pointer.
TNT1 A 0 A_GiveToTarget("FireCritAble",1)
TNT1 A 0 A_Setuservar("user_OwnerTID",ACS_ExecuteWithResult(257,0))
TNT1 A 0 A_Setuservar("user_TickDamage",6) //CallACS("MT_HealthPercent",AAPTR_TARGET,1,6)
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TARGET,AAPTR_MASTER,PTROP_NOSAFEGUARDS)
TNT1 A 0 A_ReArrangePointers(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_TARGET)
Spawn2:
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempBurnProof",1,"DeathTake")
TNT1 A 0 A_GiveToTarget("BurnedEffect",1)

TNT1 A 0 A_SetuserVar("user_LoopCount", user_LoopCount+1)
TNT1 A 0 A_Jumpif( user_LoopCount <= 1,"Spawn2")
TNT1 A 0 A_SetuserVar("user_LoopCount", 0)

TNT1 A 0 //A_JumpIfInTargetInventory("ProtectorFlag",1,5)

// when we deal tick damage, we set the target to our master (the person responsible for inflicting the dot) and use this script
// to make them deal tick damage to the victim directly.
TNT1 A 0 A_ReArrangePointers(AAPTR_MASTER,AAPTR_DEFAULT,AAPTR_DEFAULT)
TNT1 A 0  ACS_NamedExecuteAlways("DotDamager", 0,user_TickDamage,user_OwnerTID) //DOT Script
TNT1 A 1 // this delay is important, otherwise it becomes a suicide
TNT1 A 0 A_ReArrangePointers(AAPTR_TRACER,AAPTR_DEFAULT,AAPTR_DEFAULT)
//now we set the target back to the spawner to keep the burn effect on them.
//TNT1 A 0 A_GiveToTarget("BurnedDamage",1)
TNT1 A 0
TNT1 A 1 A_JumpIfInTargetInventory("BurnMark",1,"Spawn2")
TNT1 A 1 A_TakefromTarget("FireCritAble",999)
Goto Death
Death:
DeathTake:
TNT1 A 0 
TNT1 A 0 A_TakefromTarget("BurnMark",999)
TNT1 A 0 A_TakefromTarget("BurnFade",999)
TNT1 A 1 A_TakefromTarget("FireCritAble",999)
stop
}
}


actor BurnedEffect : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 //SetPlayerProperty(0,1,4)
TNT1 A 0 A_SpawnItemEx("BurnedFX1",random(-24,24),random(-32,32),random(1,32))
TNT1 A 0 //SetPlayerProperty(0,1,4)
stop
}
}

actor BurnMark : PowerProtection
{
powerup.duration 87
Damagefactor "Crisperizer" , 3.0
Damagefactor "HeatRay" , 3.0
}

actor BurnFade : Powerup
{
powerup.duration 0x7FFFFFFD
Powerup.Color Red, 0.15
}

actor BurnStackDelay : powerup
{powerup.duration 5}

actor BurnedFX1  //These are decorative.
{
PROJECTILE
+THRUACTORS
+NOGRAVITY
height 2
Radius 2
damage (0)
reactiontime 1
scale 1
RenderStyle "Add"
Alpha 0.5
States
{
Spawn:
BRNF AABBCCDDEEFGH 1 
Death:
TNT1 A 1
stop
}
}

//[+]=========================[+]
//--------|Frostbite|------------
//[+]=========================[+]
actor FrostbiteStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("FrostbiteMark",1,"Sustain")
TNT1 A 0 A_Jumpifinventory("Pro_IceResistance",1,"Nope")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_GiveInventory("FrostbiteMark",1)
TNT1 A 0 A_GiveInventory("FrostbiteFade",1)
TNT1 A 0 A_SpawnItemEX("FrostbiteWatcher")
TNT1 A 0 A_ScaleVelocity(0.6)
TNT1 A 0 A_Playsoundex("support/Negative","Soundslot8")
TNT1 A 0 A_Jumpifinventory("PRO_Gutsy",1,"Gutsy")
stop

Gutsy:
TNT1 A 0 //A_SpawnItemEX("GutsyRageFX")
stop

Sustain:
TNT1 A 0 A_GiveInventory("FrostbiteMark",1)
stop

Nope:
TNT1 A 0
stop
}
}
actor FrostbiteWatcher //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%o succumed to %k's Frostbiteing"
var int user_OwnerTID;
var int user_TickDamage;
var int user_LoopCount;
States
{
Spawn:
TNT1 A 0
Spawn2:
TNT1 A 1 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("TempFrostProof",1,"DeathTake")

TNT1 A 0 A_SetuserVar("user_LoopCount", user_LoopCount+1)
TNT1 A 0 A_Jumpif( user_LoopCount <= 5,"Spawn2")
TNT1 A 0 A_SetuserVar("user_LoopCount", 0)

TNT1 A 0 A_GiveToTarget("FrostBittenEffect",1)

TNT1 A 1 A_JumpIfInTargetInventory("FrostbiteMark",1,"Spawn2")
Goto Death
Death:
DeathTake:
TNT1 A 0 
TNT1 A 0 A_TakefromTarget("FrostbiteMark",999)
TNT1 A 1 A_TakefromTarget("FrostbiteFade",999)
stop
}
}


actor FrostBittenEffect : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 //SetPlayerProperty(0,1,4)
TNT1 A 0 A_SpawnItemEx("FrostBiteParticle1",random(-24,24),random(-32,32),random(1,32))
TNT1 A 0 //SetPlayerProperty(0,1,4)
stop
}
}

actor FrostbiteMark : PowerSlow
{
Speed 0.85
powerup.duration -5
}

actor FrostbiteFade : Powerup
{
powerup.duration 0x7FFFFFFD
Powerup.Color Blue, 0.15
}

actor FrostBiteParticle1 : ProjectileBase
{
+THRUACTORS
Scale 2.5
Height 2
Radius 2
Speed 15
Renderstyle "Translucent"
ReactionTime 12
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 ThrustThingZ(0,-3,0,0)
PWDS ABC 3
PWDS CCC 1 A_SpawnitemEX("PowderSnowTrail",0,0,0,0,0,0,0,1)
Spawn2:
PWDS C 1 A_SpawnitemEX("PowderSnowTrail",0,0,0,0,0,0,0,1)
PWDS C 0 A_CountDown
PWDS C 0 A_Fadeout
PWDS C 0 A_ScaleVelocity(0.9)
loop 
}
}

/*
actor PowderSnowTrail : BasicClientside
{
-NOINTERACTION
-NOGRAVITY
scale 2
Gravity 0.5
States
{
Spawn:
TNT1 A 0
FCRA IJKL 1 
stop
}
}
*/

//[+]=========================[+]
//-----------|Stop|------------
//[+]=========================[+]
actor StopStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("StopMark",1,"Sustain")
TNT1 A 0 A_Jumpifinventory("Pro_EuclidResistance",1,"Nope")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_GiveInventory("StopMark",1)
TNT1 A 0 A_GiveInventory("StopCount",100)
PLAY H 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,1)
PLAY H 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,1)
TNT1 A 0 A_SpawnItemEx("STDStopWatcher")
TNT1 A 0 A_Playsoundex("support/TimeStop","Soundslot8")
stop

Sustain:
TNT1 A 0 A_GiveInventory("StopMark",1)
stop

Nope:
TNT1 A 0
stop
}
}

actor StopMark : Powerup
{
inventory.amount 1
powerup.duration 87
}

actor StopCount : inventory
{
inventory.amount 1
inventory.Maxamount 100
}


actor STDStopWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
Renderstyle none
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_Warp(AAPTR_TARGET, 0.0,0.0,0.0,0.0,WARPF_NOCHECKPOSITION)
TNT1 A 0 A_SpawnItemEx("TimeStopGFX", random(8, 64), 0, random(0, 64), 0, 0, 0, random(0, 359))
goto Spawn.Check1

Spawn.Check1:
TNT1 A 0 A_JumpIfInTargetInventory("StopMark", 1, "Spawn.Check2")
goto Death

Spawn.Check2:
TNT1 A 0 A_JumpIfInTargetInventory("StopCount", 1, "Spawn")
goto Death

Death:
TNT1 A 5 A_GiveToTarget("TimeUnstopped")
TNT1 A 0 A_TakefromTarget("StopMark",999)
TNT1 A 1 A_TakefromTarget("StopCount",999)
stop
}
}

//[+]=========================[+]
//-----------|Stun|------------
//[+]=========================[+]
actor StunStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("StunGuard",1,"Nope")
//TNT1 A 0 A_Jumpifinventory("Pro_EuclidResistance",1,"Nope")
//TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_GiveInventory("StunMark",1)
TNT1 A 0 A_GiveInventory("StunGuard",1)
TNT1 A 0 A_Stop
TNT1 A 0 A_SpawnItemEx("StunnedFX")
//TNT1 A 0 A_Playsoundex("support/Negative","Soundslot8")
TNT1 A 0 A_Jumpifinventory("PRO_Gutsy",1,"Gutsy")
stop

Gutsy:
TNT1 A 0 //A_SpawnItemEX("GutsyRageFX")
stop

Nope:
TNT1 A 0
stop
}
}

actor StunMark : PowerSpeed
{
inventory.amount 1
powerup.duration 35
Speed 0.0
}

actor StunGuard : Powerup
{
inventory.amount 1
powerup.duration -5
}

actor StunnedFX : BasicClientside
{
scale 2.5
Translation "192:192=104:104", "198:198=110:110", "195:195=130:130"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("StunnedFXWarper",0)
Spawn2:
DSBL CCCDDD 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
loop
Death:
DSBL DZDCZCDZDCZC 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
stop
}
}

//[+]=========================[+]
//--------|Blind|------------
//[+]=========================[+]

actor BlindStatusProc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("BlindMark",1,"Sustain")
TNT1 A 0 A_Jumpifinventory("Pro_ElecResistance",1,"Nope")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_GiveInventory("BlindMark",5)
PLAY H 0 ACS_NamedExecuteAlways("MT_Blinder",0)
TNT1 A 0 A_SpawnItemEx("STDBlindWatcher")
TNT1 A 0 A_SpawnItemEx("BlinderdFX")
TNT1 A 0 A_Playsoundex("support/Negative","Soundslot8")
stop

Sustain:
TNT1 A 0 A_GiveInventory("BlindMark",5)
stop

Nope:
TNT1 A 0
stop
}
}



actor MT_Blind : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
PLAY H 0 ACS_NamedExecuteAlways("BlindConditionHandler",0)
TNT1 A 0 A_SpawnItemEx("BlinderdFX")
stop

Nope:
TNT1 A 0
stop
}
}

actor MT_QuickBlind : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
PLAY H 0 ACS_NamedExecuteAlways("BlindConditionHandler",0,10)
TNT1 A 0 A_SpawnItemEx("BlinderdFX")
stop

Nope:
TNT1 A 0
stop
}
}

actor BlindMark : inventory
{
inventory.amount 1
inventory.MaxAmount 210
}


actor BlindGuard : Powerup
{
inventory.amount 1
powerup.duration 35
}


actor STDBlindWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
Renderstyle none
States
{
Spawn:
TNT1 A 0
TNT1 A 1 
TNT1 A 0 //A_SpawnItemEx("TimeStopGFX", random(8, 64), 0, random(0, 64), 0, 0, 0, random(0, 359))
goto Spawn.Check1

Spawn.Check1:
TNT1 A 0 A_TakefromTarget("BlindMark",1)
TNT1 A 0 A_JumpIfInTargetInventory("BlindMark", 1, "Spawn")
goto Death

Death:
TNT1 A 0 A_TakefromTarget("BlindMark",999)
stop
}
}

actor BlinderdFX : BasicClientside
{
scale 2.5
Translation "192:192=104:104", "198:198=110:110", "195:195=130:130"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("BlinderFXWarper",0)
Spawn2:
BNDR AAAAAAABBBBBBB 1 A_Warp(AAPTR_TARGET,0,0,48,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
loop
Death:
BNDR AZAZAZAZBZBZBZ 1 A_Warp(AAPTR_TARGET,0,0,48,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
stop
}
}