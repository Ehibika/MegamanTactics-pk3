
Actor Prototyper : ClassBase //replaces Prototyper
{
Player.DisplayName "Prototyper"
Player.SoundClass "megaman"

Player.Startitem "IsPrototyper"
Player.Startitem "Prototyper_ClassSet"

player.startitem "SetupShop"
player.startitem "LoadShopInventory"
player.startitem "RoundSignatureGive"
player.startitem "AbilityAmmo"
+NOSKIN
States
{
Spawn: 
PLY1 A 0
PLY1 B 1 
PLY1 A 1
GoTo Spawn+2
See:
PLY1 BCDE 5
GoTo Spawn+1
Missile:
PLY1 F 5
PLY1 G 4
GoTo Spawn+2
PainFix:
PLY1 H 0 
GoTo PainFrames
}
}



Actor IsPrototyper : Once{}
Const int Cap_PrototyperAbility1 = 5;
Const int Cap_PrototyperAbility2 = 5;

actor PrototyperStarterSet : CustomInventory
{
states
{
Pickup:
TNT1 A 0 //A_GiveInventory("Zapper",1)
TNT1 A 0 //ACS_NamedExecuteAlways("GiveSignatureCharge",0,Cap_PrototyperAbility1)
TNT1 A 0
Done:
TNT1 A 0
stop
}
}

actor Prototyper_Melee : CustomInventory
{
states
{
Pickup:
TNT1 A 0 //A_GiveInventory("BasicKnife",1)
TNT1 A 0
Done:
TNT1 A 0
stop
}
}

actor Prototyper_ClassSet : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("UseAbility1_Prototyper",1)
TNT1 A 0 A_GiveInventory("Ability1_ChargeFlag",1)
TNT1 A 0 A_GiveInventory("AbilityChargeCap_1",Cap_PrototyperAbility1)

//==
TNT1 A 0 A_GiveInventory("UseAbility2_Prototyper",1)
TNT1 A 0 A_GiveInventory("Ability2_ChargeFlag",1)
TNT1 A 0 A_GiveInventory("AbilityChargeCap_2",Cap_PrototyperAbility2)
//==
Done:
TNT1 A 0
stop
}
}

//=========|Class Shop|============

actor Prototyper_ClassShop : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("BuyPrototyperAbility1",1)
TNT1 A 0 A_GiveInventory("BuyPrototyperAbility2",1)
stop
}
}

Const int Cost_PrototyperAbility1 = 100;
Const int Cost_PrototyperAbility2 = 100;

actor BuyPrototyperAbility1 : BuyThing
{
states
{
Use1:
TNT1 A 0 A_JumpIf(CallACS("CashCheck",Cost_PrototyperAbility1),"Use2")
goto NoMoney
CostPay:
TNT1 A 0 ACS_NamedExecuteWithResult("CashPay",Cost_PrototyperAbility1)
goto BuySuccess
//===
Use2:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_1",Cap_PrototyperAbility1,"FullCapacity")
TNT1 A 0 A_GiveInventory("AbilityCharge_1",1)
TNT1 A 0 ACS_NamedExecuteAlways("Write_Inventory",0)

goto CostPay
}
}

actor BuyPrototyperAbility2 : BuyThing
{
states
{
Use1:
TNT1 A 0 A_JumpIf(CallACS("CashCheck",Cost_PrototyperAbility2),"Use2")
goto NoMoney
CostPay:
TNT1 A 0 ACS_NamedExecuteWithResult("CashPay",Cost_PrototyperAbility2)
goto BuySuccess
//===
Use2:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_2",Cap_PrototyperAbility2,"FullCapacity")
TNT1 A 0 A_GiveInventory("AbilityCharge_2",1)
TNT1 A 0 ACS_NamedExecuteAlways("Write_Inventory",0)

goto CostPay
}
}
