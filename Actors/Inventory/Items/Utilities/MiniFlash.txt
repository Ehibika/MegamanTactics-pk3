actor MiniFlash : BaseMM8BDMUseItem
{
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "$PU_MiniFlash"
Tag "$TAG_MiniFlash"
inventory.icon "CENTSI"
Inventory.PickupSound "item/1up"
+INVBAR
+COUNTITEM
scale 2.0
States
{
Use:
//EBAL E 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 ACS_NamedExecuteAlways("RunItemAbility",0,10)
fail
}
}

actor ItemAbility_10 : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MINIFLASH"
Tag "SmokeGrenade Ability"
weapon.ammotype1 "AbilityAmmo"
inventory.icon "CENTSI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
XH0D A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
Ready1:
"####" A 0 A_FireCustomMissile("BasicThrowableAimPath",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" A 1 A_WeaponReady
goto Ready1

Fire:
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("MiniFlashthrow",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" E 0 A_TakeInventory("MiniFlash",1)
XH0D C 2 OffSet(1,31)
XH0D C 2 OffSet(-70,74)
XH0D C 2 OffSet(-121,114)
XH0D D 2 OffSet(1,31)
XH0D D 2 OffSet(-21,56)
XH0D D 2 OffSet(-33,84)
TNT1 A 16 OffSet(2,32)
"####" D 0 A_JumpIfInventory("MiniFlash",1,"Fire.Readyup")
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
XH0D A 0 Offset(0,48)
"####" A 0 A_FireCustomMissile("BasicThrowableAimPath2",0,1,0,-20,0,Aim_ArcUnderhand+(Aim_ArcUnderhandScale*Sin(-pitch)))
"####" A 1 A_Jumpif(CallACS("MT_ButtonCheck",BT_ATTACK)==1,"AltFire2")
"####" A 1 A_Refire
goto Ready1

AltFire2:
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("MiniFlashUnderthrow",0,1,0,-20,0,Aim_ArcUnderhand+(Aim_ArcUnderhandScale*Sin(-pitch)))
"####" E 0 A_TakeInventory("MiniFlash",1)
XH0D C 2 OffSet(1,31)
XH0D C 2 OffSet(-70,74)
XH0D C 2 OffSet(-121,114)
XH0D D 2 OffSet(1,31)
XH0D D 2 OffSet(-21,56)
XH0D D 2 OffSet(-33,84)
TNT1 A 16 OffSet(2,32)
"####" D 0 A_JumpIfInventory("MiniFlash",1,"Fire.Readyup")
"####" B 0 A_Jump(256,"End")
goto End

Fire.Readyup:
XH0D A 2 Offset(-4,69)
XH0D A 2 Offset(-2,48)
goto Ready1

End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

Actor MiniFlashFirehitDelay : powerprotection
{
Powerup.duration 8
Damagefactor "MiniFlashFire", 0
}


actor MiniFlashthrow : BasicThrowable
{
Obituary "$OB_MINIFLASH"
ReactionTime 35
-USEBOUNCESTATE
States
{
Spawn:
TNT1 A 0
EDDI M 0 A_GiveInventory("ProjectileCode",1)
EDDI M 1 A_Jump(256,"Spawn2")
Goto Spawn2

Spawn2:
EDDI MN 1 A_GiveInventory("MiniFlashNadeFunc")
EDDI M 0 A_SpawnItemEx("BrightBulbParticle",Random2(15),Random2(15),Random2(15),-momx*0.2,-momy*0.2,-momz*0.2,0,9)
EDDI OP 1 A_GiveInventory("MiniFlashNadeFunc")
EDDI P 0 A_SpawnItemEx("BrightBulbParticle",Random2(15),Random2(15),Random2(15),-momx*0.2,-momy*0.2,-momz*0.2,0,9)
EDDI M 1 A_Jump(256,"Spawn2")
Goto Spawn2

Death:
MINB A 0 A_SpawnItemEx("MiniFlashExplosion",0,0,0,0,0,0,0,1)
stop
}
}

actor MiniFlashthrow2 : MiniFlashthrow
{
-USEBOUNCESTATE
-NOGRAVITY
States
{
Spawn:
TNT1 A 0
EDDI M  0 A_GiveInventory("ProjectileCode",1)
EDDI M  1 A_Jump(256,"Spawn2")
Goto Spawn2

Spawn2:
EDDI M 0 A_PlaySoundEX("weapon/Heat1","Soundslot6")
EDDI M 0 A_SpawnItemEx("BrightBulbParticle",Random2(15),Random2(15),Random2(15),-momx*0.2,-momy*0.2,-momz*0.2,0,9)
EDDI MM 1 A_GiveInventory("MiniFlashNadeFunc")
loop
	
Death:
MINB A 0 A_SpawnItemEx("MiniFlashExplosion",0,0,0,0,0,0,0,1)
stop
}
}

actor MiniFlashUnderthrow : MiniFlashthrow
{Speed 25}

actor MiniFlashExplosion : BasicExplosion
{
Obituary "$OB_MINIFLASH"
Scale 5.5
States
{
Spawn:
NAPC A 0 
TNT1 A 5 A_SpawnItemEx("FlashPopFX1",0,0,-16,0,0,0,0,1)
TNT1 A 0 A_PlaySoundEx("weapon/centaurflash","Weapon")
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("MT_flashstopperlight",FlashRang,140) > 0,"Spawn2")
stop

Spawn2:
TNT1 A 1 A_GiveToTarget("FlashPingSoundCue")
stop
}
}

actor MiniFlashNadeFunc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
FSU1 A 0 A_CountDown
FSU1 A 0 A_CheckFloor("SlowDown")
stop
SlowDown:
FSU1 A 0 A_ScaleVelocity(0.3)
Goto Spawn2
stop
}
}