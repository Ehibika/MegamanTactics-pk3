actor WireAdaptorMT : BaseMM8BDMUseItem
{
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "$PU_WIREADAPTOR"
inventory.icon "WIRE"
Tag "$TAG_WIREADAPTOR"
Inventory.PickupSound "item/1up"
+INVBAR
+COUNTITEM
scale 2.0
States
{
Use:
//EBAL E 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 ACS_NamedExecuteAlways("RunItemAbility",0,5)
fail
}
}

actor ItemAbility_5 : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MININADE"
Tag "SmokeGrenade Ability"
weapon.ammotype1 "AbilityAmmo"
inventory.icon "WIRE"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
SAPT A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
Ready1:
"####" A 0 //A_FireCustomMissile("BasicThrowableAimPath",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" A 1 A_WeaponReady
goto Ready1

Altfire:
Fire:
"####" A 0 A_PlaySoundEx("weapon/WireAdp","Item")
"####" A 0 A_SpawnItemEx("MT_WireAdaptorHook",-2,0,32,cos(-pitch)*1,0,sin(-pitch)*1,0,0)
"####" E 0 
"####" BC 2
Fire.Wait:
"####" A 1
"####" A 0 A_JumpIfInventory("WireHookShotDelay",1,"Fire.Wait")
"####" A 1 A_JumpIfInventory("WireAdaptorMT",1,"Ready1")
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,96)
"####" A 0 A_Jump(256,"End")
goto End


End:
"####" C 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor MT_WireAdaptorHook : WireAdaptorHook
{
reactionTime 2
states
{
Spawn:
WADP B 0
WADP B 0 A_GiveInventory("ProjectileCode",1)
WADP B 0 A_SetUserVar("user_CountDown",reactiontime)
WADP B 0 A_SetUserVar(user_PTID, ACS_NamedExecuteWithResult("core_gettarget"))
WADP B 0 A_GiveInventory("WeaponCharge",1)
WADP B 0 A_ScaleVelocity(44)//Speed of projectile.
goto Spawn2

Death:
WADP B 0 A_JumpIfCloser(64, "SuperDeath")
XDeath:
Crash:
WADP B 0 A_JumpIf(user_CountDown == 0, "SuperDeath")
WADP B 0 A_JumpIfInventory("WeaponCharge",2,"SuperDeath")
WADP B 0 A_JumpIfInventory("WeaponCharge",1,1)
goto SuperDeathPoof//Kill hook early if it never got through the Spawn state.
WADP B 0 A_PlaySoundEx("weapon/crashland","Weapon")
WADP B 0 A_JumpIfInventory("NoHookshot",1,"Death1",AAPTR_TRACER)
WADP B 0 A_CheckFlag("SHOOTABLE","Death2",AAPTR_TRACER)
WADP B 0 A_Jump(256,"Death1")
goto Death1
Death1://Tracer isn't shootable (probably can't move)
WADP B 0 ACS_NamedExecuteAlways("MT_hookshot",0,user_PTID,30,0)
WAD1 B 3
goto DeathLoop1

Death2://Tracer IS shootable (probably CAN move)
WADP B 0 ACS_NamedExecuteAlways("MT_hookshot",0,user_PTID,30,1)
WAD1 B 3//Needs at least 3 tics of delay.
goto DeathLoop2

}
}

Actor MT_WireAdaptorHookFX : WireAdaptorHookFX
{
States
{
Spawn:
WAD1 I 0
WADP B 0 A_GiveInventory("ProjectileCode",1)
WAD1 C 1
stop
}
}

actor WireHookShotEnd_MT : WireHookShotEnd Replaces WireHookShotEnd
{
States
{
Pickup:
WADP B 0 A_JumpIfInventory("Ability2_Snakeman",1,"Pickup.SnakeWire")
goto Pickup.base

Pickup.base:
TNT1 A 0 A_TakeInventory("WireAdaptor",1)
TNT1 A 0 A_TakeInventory("WireAdaptorMT",1)
TNT1 A 0 A_TakeInventory("WireAdaptorDelay",1)
stop

Pickup.SnakeWire:
TNT1 A 0 A_TakeInventory("WireAdaptor",1)
TNT1 A 0 A_TakeInventory("AbilityCharge_2",1)
TNT1 A 0 A_TakeInventory("WireAdaptorDelay",1)
stop

}
}