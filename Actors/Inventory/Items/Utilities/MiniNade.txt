actor MiniNade : BaseMM8BDMUseItem
{
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "$PU_MiniNade"
Tag "$TAG_MiniNade"
inventory.icon "XTR0WI_D"
Inventory.PickupSound "item/1up"
+INVBAR
+COUNTITEM
scale 2.0
States
{
Use:
//EBAL E 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 ACS_NamedExecuteAlways("RunItemAbility",0,2)
fail
}
}

actor ItemAbility_2 : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MININADE"
Tag "SmokeGrenade Ability"
weapon.ammotype1 "AbilityAmmo"
inventory.icon "XTR0WI_D"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
XH0D A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
Ready1:
"####" A 0 A_FireCustomMissile("BasicThrowableAimPath",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" A 1 A_WeaponReady
goto Ready1

Fire:
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("MiniNadethrow",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" E 0 A_TakeInventory("MiniNade",1)
XH0D C 2 OffSet(1,31)
XH0D C 2 OffSet(-70,74)
XH0D C 2 OffSet(-121,114)
XH0D D 2 OffSet(1,31)
XH0D D 2 OffSet(-21,56)
XH0D D 2 OffSet(-33,84)
TNT1 A 16 OffSet(2,32)
"####" D 0 A_JumpIfInventory("MiniNade",1,"Fire.Readyup")
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
XH0D A 0 Offset(0,48)
"####" A 0 A_FireCustomMissile("BasicThrowableAimPath2",0,1,0,-20,0,Aim_ArcUnderhand+(Aim_ArcUnderhandScale*Sin(-pitch)))
"####" A 1 A_Jumpif(CallACS("MT_ButtonCheck",BT_ATTACK)==1,"AltFire2")
"####" A 1 A_Refire
goto Ready1

AltFire2:
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("MiniNadeUnderthrow",0,1,0,-20,0,Aim_ArcUnderhand+(Aim_ArcUnderhandScale*Sin(-pitch)))
"####" E 0 A_TakeInventory("MiniNade",1)
XH0D C 2 OffSet(1,31)
XH0D C 2 OffSet(-70,74)
XH0D C 2 OffSet(-121,114)
XH0D D 2 OffSet(1,31)
XH0D D 2 OffSet(-21,56)
XH0D D 2 OffSet(-33,84)
TNT1 A 16 OffSet(2,32)
"####" D 0 A_JumpIfInventory("MiniNade",1,"Fire.Readyup")
"####" B 0 A_Jump(256,"End")
goto End

Fire.Readyup:
XH0D A 2 Offset(-4,69)
XH0D A 2 Offset(-2,48)
goto Ready1

End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====


actor MiniNadethrow : BasicThrowable
{
Obituary "$OB_MININADE"
States
{
Spawn:
TNT1 A 0
XH0D Q 0 A_GiveInventory("ProjectileCode",1)
XH0D Q 1 A_Jump(256,"Spawn2")
Goto Spawn2

Spawn2:
XH0D QRST 1 A_SpawnItemEX("BasicThrowableTrail",0,0,5,0,0,0,0,SXF_TRANSFERTRANSLATION,0)
XH0D Q 0 A_CountDown
XH0D Q 1 A_Jump(256,"Spawn2")
Goto Spawn2

Spawn.Bounced:
TNT1 A 1 A_SpawnItemEX("MiniNadethrow2",0,0,0,momx*0.1,momy*0.1,momz,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEMOMENTUM,0)
stop

Bounce.Floor:
Bounce.Ceiling:
MINB A 0 A_ChangeFlag("NOGRAVITY",false)
MINB A 0 A_ChangeFlag("USEBOUNCESTATE",false)
XH0D QRST 1 A_Jump(256,"Spawn.Bounced")
Goto Spawn.Bounced

Death:
MINB A 0 A_SpawnItemEx("MiniNadeExplosion",0,0,0,0,0,0,0,1)
stop
}
}

actor MiniNadethrow2 : MiniNadethrow
{
-USEBOUNCESTATE
-NOGRAVITY
States
{
Spawn:
TNT1 A 0
XH0D U  0 A_GiveInventory("ProjectileCode",1)
XH0D U  1 A_Jump(256,"Spawn2")
Goto Spawn2

Spawn2:
XH0D U 0 A_PlaySoundEX("weapon/Heat1","Soundslot6")
XH0D U 1 A_CountDown
XH0D U 0 A_CheckFloor("SlowDown")
loop
SlowDown:
XH0D U 0 A_ScaleVelocity(0.3)
Goto Spawn2
	
Death:
MINB A 0 A_SpawnItemEx("MiniNadeExplosion",0,0,0,0,0,0,0,1)
stop
}
}

actor MiniNadeUnderthrow : MiniNadethrow
{Speed 25}

actor MiniNadeExplosion : BasicExplosion
{
Obituary "$OB_MININADE"
Scale 5.5
States
{
Spawn:
NAPC A 0 
MBAL B  0 A_GiveInventory("ProjectileCode",1)
NAPC D 0 A_Explode(75, 216, 1,0,108)
NAPC A 0 A_PlaySoundEx("weapon/HyperBomb", "Weapon")
MINB A 0 A_SpawnItemEx("ExplosionEffect3",0,0,0,0,0,0,0,1)
TNT1 A 1
stop
}
}



	actor GrenadeAim : GolfBallAim{ Gravity 1.0 }

	actor GrenadeAimInstantStarter3 : GrenadeAim
	{
		+CLIENTSIDEONLY
		translation "198:198=220:220", "192:192=229:229"
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 ACS_NamedExecuteWithResult("Arc_Limit_Start")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("GrenadeAimInstantBuffer3",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}
	actor GrenadeAimInstantBuffer3 : GrenadeAim
	{
		+CLIENTSIDEONLY
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("GrenadeAimInstant3",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}

	actor GrenadeAimInstant3 : GrenadeAim
	{
		+CLIENTSIDEONLY
		+BOUNCEONCEILINGS
		+BOUNCEONWALLS
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(CallACS("Arc_Limit"),"Nope")
			TNT1 A 0 //A_JumpIfInTargetInventory("BetweenShots",1,"Nope")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",(10*momx)/-20.0,-(10*momy)/-20.0,(10*momz)/-20.0,0,0,0,0,SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION )
			TNT1 A 0 A_SpawnItemEx("GrenadeAimInstant3",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		Nope:
			TNT1 A 1
			stop
		}
	}


actor BasicThrowableAimPath : GrenadeAimInstantStarter3 { Speed 48 }
actor BasicThrowableAimPath2 : GrenadeAimInstantStarter3 { Speed 25 }